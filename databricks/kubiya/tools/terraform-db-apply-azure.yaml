tools:
- name: azure-db-apply-tool
  image: hashicorp/terraform              
  description: "Create a databricks workspace."
  long_running: true
  type: docker
  alias: ter-az-apply
  content: |
    git clone -b "$BRANCH" https://"$PAT"@github.com/"$GIT_ORG"/"$GIT_REPO".git $DIR
    cd $DIR/aux/databricks/terraform/azure

    terraform init  -backend-config="storage_account_name={{ .storage_account_name}}" \
      -backend-config="container_name={{ .container_name}}" \
      -backend-config="key=databricks/{{ .workspace_name}}/terraform.tfstate" \
      -backend-config="resource_group_name={{ .resource_group_name}}" \
      -backend-config="subscription_id=${ARM_SUBSCRIPTION_ID}"
    terraform apply -auto-approve \
      -var "WORKSPACE_NAME={{ .workspace_name }}" \
      -var "region={{ .region }}" \
      -var "managed_services_cmk_key_vault_key_id={{ .managed_services_cmk_key_vault_key_id }}" \
      -var "managed_disk_cmk_key_vault_key_id={{ .managed_disk_cmk_key_vault_key_id }}" \
      -var "infrastructure_encryption_enabled={{ .infrastructure_encryption_enabled }}" \
      -var "no_public_ip={{ .no_public_ip }}" \
      -var "enable_vnet={{ .enable_vnet }}" \
      -var "virtual_network_id={{ .virtual_network_id }}" \
      -var "private_subnet_name={{ .private_subnet_name }}" \
      -var "public_subnet_name={{ .public_subnet_name }}" \
      -var "public_subnet_network_security_group_association_id={{ .public_subnet_network_security_group_association_id }}" \
      -var "private_subnet_network_security_group_association_id={{ .private_subnet_network_security_group_association_id }}" \
      -var "storage_account_name={{ .storage_account_name }}" \
      -var "security_profile_enabled={{ .security_profile_enabled }}" \
      -var "enhanced_monitoring_enabled={{ .enhanced_monitoring_enabled }}" \
      -var "azure_client_id=${ARM_CLIENT_ID}" \
      -var "azure_client_secret=${ARM_CLIENT_SECRET}" \
      -var "azure_tenant_id=${ARM_TENANT_ID}" \
      -var "automatic_update={{ .automatic_update }}" \
      -var "restart_no_updates={{ .restart_no_updates }}" \
      -var "day_of_week={{ .day_of_week }}" \
      -var "frequency={{ .frequency }}" \
      -var "hours={{ .hours }}" \
      -var "minutes={{ .minutes }}" \
      -var 'address_space={{ .address_space }}' \
      -var 'address_prefixes_public={{ .address_prefixes_public }}' \
      -var 'address_prefixes_private={{ .address_prefixes_private }}' 

    workspace_url=$(terraform output -raw databricks_host)
    echo "The link to the workspace is: $workspace_url"
    # write your message here
    apk update && apk add curl jq

    MESSAGE=$(cat <<EOF
    The link to the workspace is: ${workspace_url}
    The state file can be found here: https://{{ .storage_account_name}}.blob.core.windows.net/{{ .container_name}}
    EOF
    )
    ESCAPED_MESSAGE=$(echo "$MESSAGE" | jq -Rs .)
    # Ensure required environment variables are set
    if [ -z "$SLACK_CHANNEL_ID" ] || [ -z "$SLACK_THREAD_TS" ] || [ -z "$SLACK_API_TOKEN" ]; then
      echo "Error: SLACK_CHANNEL_ID, SLACK_THREAD_TS, and SLACK_API_TOKEN must be set."
      exit 1
    fi

    # Prepare the payload for sending a multiline message in a thread
    PAYLOAD=$(cat <<EOF
    {
        "channel": "$SLACK_CHANNEL_ID",
        "text": $ESCAPED_MESSAGE,
        "thread_ts": "$SLACK_THREAD_TS"
    }
    EOF
    )

    # Send the message using Slack API
    curl -X POST "https://slack.com/api/chat.postMessage" \
    -H "Authorization: Bearer $SLACK_API_TOKEN" \
    -H "Content-Type: application/json" \
    --data "$PAYLOAD"

  args:
    - name: "workspace_name"
      description: "The name of the databricks workspace."
      required: true
      
    - name: "region"
      description: "The azure region for the workspace."
      required: true

    - name: "storage_account_name"
      description: "The name of the storage account to use for the backend."
      required: true

    - name: "container_name"
      description: "The name of the container to use for the backend."
      required: true

    - name: "resource_group_name"
      description: "The name of the resource group to use for the backend."
      required: true

    - name: "managed_services_cmk_key_vault_key_id"
      description: "The ID of the key vault key to use for managed services encryption."
      required: false
      

    - name: "managed_disk_cmk_key_vault_key_id"
      description: "The ID of the key vault key to use for managed disk encryption."
      required: false
      

    - name: "infrastructure_encryption_enabled"
      description: "Enable infrastructure encryption, can be true or false."
      required: false
      default: false

    - name: "no_public_ip"
      description: "Secure cluster connectivity, no public ip, can be true or false."
      required: false
      default: false

    - name: "enable_vnet"
      description: "Enable custom vnet use, boolean, can be true or false."
      required: false
      default: false

    - name: "security_profile_enabled"
      description: "Enable security profile, boolean, can be true or false."
      required: false
      default: false

    - name: "enhanced_monitoring_enabled"
      description: "Enable enhanced monitoring, boolean, can be true or false."
      required: false
      default: false

    - name: "virtual_network_id"
      description: "The virtual network id."
      required: false

    - name: "private_subnet_name"
      description: "The name of the private subnet."
      required: false

    - name: "public_subnet_name"
      description: "The name of the public subnet."
      required: false  

    - name: "public_subnet_network_security_group_association_id"
      description: "The ID of the public subnet network security group association."
      required: false  

    - name: "private_subnet_network_security_group_association_id"
      description: "The ID of the private subnet network security group association."
      required: false  

    - name: "address_space"
      description: "The address space to be used for the virtual network."
      required: false
      default: '["10.0.0.0/16"]'
    - name: "address_prefixes_public"
      description: "The address prefix for the public network."
      required: false
      default: '["10.0.2.0/24"]'
    
    - name: "address_prefixes_private"
      description: "The address prefix for the private network."
      required: false
      default: '["10.0.1.0/24"]'

    - name: "automatic_update"
      description: "Enable automatic update."
      required: false
      default: false

    - name: "restart_no_updates"
      description: "Enable restart even if there are no updates."
      required: false
      default: false

    - name: "day_of_week"
      description: "Day of the week to apply updates."
      required: false
    
    - name: "frequency"
      description: "Frequency of updates."
      required: false

    - name: "hours"
      description: "Hours of window start time."
      required: false
      default: "1"
    
    - name: "minutes"
      description: "Minutes of window start time."
      required: false
      default: "0"
  env:
    - "DB_ACCOUNT_ID"
    - "DB_ACCOUNT_CLIENT_ID"
    - "DB_ACCOUNT_CLIENT_SECRET"
    - "GIT_ORG"
    - "GIT_REPO"
    - "BRANCH"
    - "DIR"
    - "ARM_CLIENT_ID"
    - "ARM_CLIENT_SECRET"
    - "ARM_TENANT_ID"
    - "ARM_SUBSCRIPTION_ID"
    - "PAT"
    - "SLACK_CHANNEL_ID"
    - "SLACK_THREAD_TS"
    - "SLACK_API_TOKEN"